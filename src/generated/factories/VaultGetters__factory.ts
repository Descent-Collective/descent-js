/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { VaultGetters, VaultGettersInterface } from "../VaultGetters";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Vault",
        name: "_vaultContract",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_collateralToken",
        type: "address",
      },
    ],
    name: "getCollateralInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Vault",
        name: "_vaultContract",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getCollateralRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Vault",
        name: "_vaultContract",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getHealthFactor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Vault",
        name: "_vaultContract",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getMaxBorrowable",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Vault",
        name: "_vaultContract",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Vault",
        name: "_vaultContract",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getVault",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Vault",
        name: "_vaultContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_reliedUpon",
        type: "address",
      },
    ],
    name: "isReliedUpon",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e72806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a6e91adf1161005b578063a6e91adf14610120578063b09758f014610141578063c03d887114610154578063f44364c51461016757600080fd5b8063347c5d431461008257806354510b9d146100b55780635d242b97146100d8575b600080fd5b610095610090366004610aae565b61017a565b604080519384526020840192909252908201526060015b60405180910390f35b6100c86100c3366004610aae565b6101d7565b60405190151581526020016100ac565b6100eb6100e6366004610af9565b61022d565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0016100ac565b61013361012e366004610aae565b6102b4565b6040519081526020016100ac565b6100c861014f366004610aae565b610376565b610133610162366004610aae565b6103f4565b610133610175366004610aae565b6104e3565b60008060008061018b87878761052b565b9050600061019988886105fb565b905060006101a88983856106f8565b50905060008184604001516101bd9190610b48565b8451602090950151949b949a509850929650505050505050565b6000806101e585858561052b565b905060006101f386866105fb565b905080610140015161020a57600192505050610226565b6000610217878385610757565b60409092015190911115925050505b9392505050565b6000806000806000806000806102438a8a6105fb565b905060006102508b6107e1565b80516080840151519192506000916102689190610b48565b610276906301e13380610b5b565b61010084015184516020860151604087015160e088015160c090980151929e50909c509a509498509096509450919250505092959891949750929550565b6000806102c285858561052b565b905060006102d086866105fb565b90508061014001516102e757600092505050610226565b60006102f48783856106f8565b5090506000818460400151856020015161030e9190610b48565b6103189190610b48565b90506000610326848361088e565b905060006103586103396012600a610c56565b610344906001610b5b565b61034e9084610b5b565b86604001516108e7565b8651909150610368908290610c62565b9a9950505050505050505050565b604051635881fc3360e01b81526001600160a01b038381166004830152828116602483015260009190851690635881fc3390604401602060405180830381865afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec9190610c9e565b949350505050565b60008061040285858561052b565b9050600061041086866105fb565b825190915015806104245750806101400151155b1561043457600092505050610226565b60006104408284610927565b905060006104506012600a610c56565b61045b906001610b5b565b604084015161046a9084610b5b565b6104749190610cb9565b905060006104838985876106f8565b5090506000818660400151876020015161049d9190610b48565b6104a79190610b48565b905060006104b58285610c62565b90506000811380156104ca5750808660e00151105b15610368575060e08501519a9950505050505050505050565b6000806104f185858561052b565b905060006104ff86866105fb565b905080610140015161051657600092505050610226565b610521868284610757565b9695505050505050565b6105566040518060800160405280600081526020016000815260200160008152602001600081525090565b60405163e2c7283f60e01b81526001600160a01b038481166004830152838116602483015260009182918291829189169063e2c7283f90604401608060405180830381865afa1580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190610cdb565b60408051608081018252948552602085019390935291830152606082015298975050505050505050565b610603610a18565b60008060008060008060008060008060008d6001600160a01b031663c665471f8e6040518263ffffffff1660e01b815260040161064f91906001600160a01b0391909116815260200190565b6101a060405180830381865afa15801561066d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106919190610d11565b60408051610160810182529b8c5260208c019a909a52988a01979097526060890195909552608088019390935260a087019190915260c086015260e085015261010084015261012083015215156101408201529b5050505050505050505050505b92915050565b60008060006107078686610978565b905060006107176012600a610c56565b610722906001610b5b565b602086015160608701516107369085610dfb565b6107409190610b5b565b61074a9190610cb9565b9791965090945050505050565b6000806107658585856106f8565b5090506000818460400151856020015161077f9190610b48565b6107899190610b48565b90508060000361079e57600092505050610226565b60006107aa8686610927565b90506107d66107bb6012600a610c56565b6107c6906001610b5b565b6107d09084610b5b565b826108e7565b979650505050505050565b61080560405180606001604052806000815260200160008152602001600081525090565b6000806000846001600160a01b03166313f60c9a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086c9190610e0e565b6040805160608101825293845260208401929092529082015295945050505050565b6000806108cf6108a06012600a610c56565b6108ab906001610b5b565b6108b59085610b5b565b64e8d4a510008660c001516108ca9190610b5b565b6108e7565b90506103ec81856101200151600a6108ca9190610c56565b6000816000036108f657600080fd5b82600003610906575060006106f2565b81610912600185610dfb565b61091c9190610cb9565b610226906001610b48565b6000806109366012600a610c56565b610941906001610b5b565b64e8d4a510008560c0015161095a8787600001516109fa565b6109649190610b5b565b61096e9190610b5b565b6103ec9190610cb9565b6000808260800151604001514261098f9190610dfb565b60808401515161099f9190610b5b565b8360800151602001516109b29190610b48565b905060006109bf856107e1565b905060008160400151426109d39190610dfb565b82516109df9190610b5b565b82602001516109ee9190610b48565b90506105218184610b48565b6000826101200151600a610a0e9190610c56565b6102269083610b5b565b60405180610160016040528060008152602001600081526020016000815260200160008152602001610a6460405180606001604052806000815260200160008152602001600081525090565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b6001600160a01b0381168114610aab57600080fd5b50565b600080600060608486031215610ac357600080fd5b8335610ace81610a96565b92506020840135610ade81610a96565b91506040840135610aee81610a96565b809150509250925092565b60008060408385031215610b0c57600080fd5b8235610b1781610a96565b91506020830135610b2781610a96565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106f2576106f2610b32565b80820281158282048414176106f2576106f2610b32565b600181815b80851115610bad578160001904821115610b9357610b93610b32565b80851615610ba057918102915b93841c9390800290610b77565b509250929050565b600082610bc4575060016106f2565b81610bd1575060006106f2565b8160018114610be75760028114610bf157610c0d565b60019150506106f2565b60ff841115610c0257610c02610b32565b50506001821b6106f2565b5060208310610133831016604e8410600b8410161715610c30575081810a6106f2565b610c3a8383610b72565b8060001904821115610c4e57610c4e610b32565b029392505050565b60006102268383610bb5565b8181036000831280158383131683831282161715610c8257610c82610b32565b5092915050565b80518015158114610c9957600080fd5b919050565b600060208284031215610cb057600080fd5b61022682610c89565b600082610cd657634e487b7160e01b600052601260045260246000fd5b500490565b60008060008060808587031215610cf157600080fd5b505082516020840151604085015160609095015191969095509092509050565b60008060008060008060008060008060008b8d036101a0811215610d3457600080fd5b8c519b5060208d01519a5060408d0151995060608d015198506060607f1982011215610d5f57600080fd5b506040516060810181811067ffffffffffffffff82111715610d9157634e487b7160e01b600052604160045260246000fd5b806040525060808d0151815260a08d0151602082015260c08d015160408201528097505060e08c015195506101008c015194506101208c015193506101408c015192506101608c01519150610de96101808d01610c89565b90509295989b509295989b9093969950565b818103818111156106f2576106f2610b32565b600080600060608486031215610e2357600080fd5b835192506020840151915060408401519050925092509256fea264697066735822122041488375584208ff5ee08a1c8377342d6861e7290ac51da794fda4c0ec337c5464736f6c63430008150033";

type VaultGettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultGettersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultGetters__factory extends ContractFactory {
  constructor(...args: VaultGettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VaultGetters & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VaultGetters__factory {
    return super.connect(runner) as VaultGetters__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultGettersInterface {
    return new Interface(_abi) as VaultGettersInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VaultGetters {
    return new Contract(address, _abi, runner) as unknown as VaultGetters;
  }
}
