/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { VaultGetters, VaultGettersInterface } from "../VaultGetters";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Vault",
        name: "_vaultContract",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "checkHealthFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Vault",
        name: "_vaultContract",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_collateralToken",
        type: "address",
      },
    ],
    name: "getCollateralInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Vault",
        name: "_vaultContract",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getMaxBorrowable",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Vault",
        name: "_vaultContract",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getMaxWithdrawable",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Vault",
        name: "_vaultContract",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getVault",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c77806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063347c5d431461005c5780635d242b971461008f578063a62e34f7146100d7578063a6e91adf146100f8578063c03d88711461010b575b600080fd5b61006f61006a3660046108ce565b61011e565b604080519384526020840192909252908201526060015b60405180910390f35b6100a261009d366004610919565b61017b565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e001610086565b6100ea6100e53660046108ce565b6101d3565b604051908152602001610086565b6100ea6101063660046108ce565b6102d3565b6100ea6101193660046108ce565b61038b565b60008060008061012f87878761047a565b9050600061013d888861054a565b9050600061014c898484610647565b50905060008184604001516101619190610968565b8451602090950151949b949a509850929650505050505050565b6000806000806000806000806101918a8a61054a565b60808101515161010082015182516020840151604085015160e086015160c090960151929d50909b509950929750909550935091505092959891949750929550565b6000806101e185858561047a565b905060006101ef868661054a565b905080610140015161021b576102076012600a610a5f565b610212906001610a6b565b925050506102cc565b6000610228878484610647565b509050600081846020015161023d9190610968565b905080600003610255576000199450505050506102cc565b600061026185856106a6565b905060006102716012600a610a5f565b61027c906001610a6b565b604086015161028b9084610a6b565b6102959190610a82565b9050826102a46012600a610a5f565b6102af906001610a6b565b6102b99083610a6b565b6102c39190610a82565b96505050505050505b9392505050565b6000806102e185858561047a565b905060006102ef868661054a565b9050806101400151610306576000925050506102cc565b6000610313878484610647565b5090506000818460400151856020015161032d9190610968565b6103379190610968565b9050600061034584836106ff565b9050600084604001516012600a61035c9190610a5f565b610367906001610a6b565b6103719084610a6b565b61037b9190610a82565b86519091506102c3908290610aa4565b60008061039985858561047a565b905060006103a7868661054a565b825190915015806103bb5750806101400151155b156103cb576000925050506102cc565b60006103d783836106a6565b905060006103e76012600a610a5f565b6103f2906001610a6b565b60408401516104019084610a6b565b61040b9190610a82565b9050600061041a898686610647565b509050600081866040015187602001516104349190610968565b61043e9190610968565b9050600061044c8285610aa4565b90506000811380156104615750808660e00151125b156102c3575060e08501519a9950505050505050505050565b6104a56040518060800160405280600081526020016000815260200160008152602001600081525090565b60405163e2c7283f60e01b81526001600160a01b038481166004830152838116602483015260009182918291829189169063e2c7283f90604401608060405180830381865afa1580156104fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105209190610acb565b60408051608081018252948552602085019390935291830152606082015298975050505050505050565b610552610838565b60008060008060008060008060008060008d6001600160a01b031663c665471f8e6040518263ffffffff1660e01b815260040161059e91906001600160a01b0391909116815260200190565b6101a060405180830381865afa1580156105bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e09190610b16565b60408051610160810182529b8c5260208c019a909a52988a01979097526060890195909552608088019390935260a087019190915260c086015260e085015261010084015261012083015215156101408201529b5050505050505050505050505b92915050565b60008060006106568685610738565b905060006106666012600a610a5f565b610671906001610a6b565b602087015160608801516106859085610c00565b61068f9190610a6b565b6106999190610a82565b9791965090945050505050565b6000806106b56012600a610a5f565b6106c0906001610a6b565b64e8d4a510008460c001516106d986886000015161081a565b6106e39190610a6b565b6106ed9190610a6b565b6106f79190610a82565b949350505050565b60008064e8d4a510008460c001516107179190610a6b565b6107236012600a610a5f565b61072e906001610a6b565b6106e3868661081a565b6000808260800151604001514261074f9190610c00565b60808401515161075f9190610a6b565b8360800151602001516107729190610968565b90506000806000866001600160a01b03166313f60c9a6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156107b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107db9190610c13565b9194509250905060006107ee8242610c00565b6107f89085610a6b565b6108029084610968565b905061080e8186610968565b98975050505050505050565b6000826101200151600a61082e9190610a5f565b6102cc9083610a6b565b6040518061016001604052806000815260200160008152602001600081526020016000815260200161088460405180606001604052806000815260200160008152602001600081525090565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b6001600160a01b03811681146108cb57600080fd5b50565b6000806000606084860312156108e357600080fd5b83356108ee816108b6565b925060208401356108fe816108b6565b9150604084013561090e816108b6565b809150509250925092565b6000806040838503121561092c57600080fd5b8235610937816108b6565b91506020830135610947816108b6565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561064157610641610952565b600181815b808511156109b657816000190482111561099c5761099c610952565b808516156109a957918102915b93841c9390800290610980565b509250929050565b6000826109cd57506001610641565b816109da57506000610641565b81600181146109f057600281146109fa57610a16565b6001915050610641565b60ff841115610a0b57610a0b610952565b50506001821b610641565b5060208310610133831016604e8410600b8410161715610a39575081810a610641565b610a43838361097b565b8060001904821115610a5757610a57610952565b029392505050565b60006102cc83836109be565b808202811582820484141761064157610641610952565b600082610a9f57634e487b7160e01b600052601260045260246000fd5b500490565b8181036000831280158383131683831282161715610ac457610ac4610952565b5092915050565b60008060008060808587031215610ae157600080fd5b505082516020840151604085015160609095015191969095509092509050565b80518015158114610b1157600080fd5b919050565b60008060008060008060008060008060008b8d036101a0811215610b3957600080fd5b8c519b5060208d01519a5060408d0151995060608d015198506060607f1982011215610b6457600080fd5b506040516060810181811067ffffffffffffffff82111715610b9657634e487b7160e01b600052604160045260246000fd5b806040525060808d0151815260a08d0151602082015260c08d015160408201528097505060e08c015195506101008c015194506101208c015193506101408c015192506101608c01519150610bee6101808d01610b01565b90509295989b509295989b9093969950565b8181038181111561064157610641610952565b600080600060608486031215610c2857600080fd5b835192506020840151915060408401519050925092509256fea26469706673582212204f34571b5e166d33e63dc8f0aed786dff4726db818494a3a3bd56148ee4b55c164736f6c63430008150033";

type VaultGettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultGettersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultGetters__factory extends ContractFactory {
  constructor(...args: VaultGettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VaultGetters & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VaultGetters__factory {
    return super.connect(runner) as VaultGetters__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultGettersInterface {
    return new Interface(_abi) as VaultGettersInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VaultGetters {
    return new Contract(address, _abi, runner) as unknown as VaultGetters;
  }
}
