/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../common';
import type { VaultGetters, VaultGettersInterface } from '../VaultGetters';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract Vault',
        name: '_vaultContract',
        type: 'address',
      },
      {
        internalType: 'contract ERC20',
        name: '_collateralToken',
        type: 'address',
      },
    ],
    name: 'getCollateralInfo',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract Vault',
        name: '_vaultContract',
        type: 'address',
      },
      {
        internalType: 'contract ERC20',
        name: '_collateralToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    name: 'getCollateralRatio',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract Vault',
        name: '_vaultContract',
        type: 'address',
      },
      {
        internalType: 'contract ERC20',
        name: '_collateralToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    name: 'getHealthFactor',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract Vault',
        name: '_vaultContract',
        type: 'address',
      },
      {
        internalType: 'contract ERC20',
        name: '_collateralToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    name: 'getMaxBorrowable',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract Vault',
        name: '_vaultContract',
        type: 'address',
      },
      {
        internalType: 'contract ERC20',
        name: '_collateralToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    name: 'getMaxWithdrawable',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract Vault',
        name: '_vaultContract',
        type: 'address',
      },
      {
        internalType: 'contract ERC20',
        name: '_collateralToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    name: 'getVault',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract Vault',
        name: '_vaultContract',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_reliedUpon',
        type: 'address',
      },
    ],
    name: 'isReliedUpon',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50610e07806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a6e91adf1161005b578063a6e91adf14610120578063b09758f014610141578063c03d887114610154578063f44364c51461016757600080fd5b8063347c5d431461008257806354510b9d146100b55780635d242b97146100d8575b600080fd5b610095610090366004610a43565b61017a565b604080519384526020840192909252908201526060015b60405180910390f35b6100c86100c3366004610a43565b6101d7565b60405190151581526020016100ac565b6100eb6100e6366004610a8e565b61022c565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0016100ac565b61013361012e366004610a43565b610284565b6040519081526020016100ac565b6100c861014f366004610a43565b61034a565b610133610162366004610a43565b6103c8565b610133610175366004610a43565b6104b7565b60008060008061018b8787876104fe565b9050600061019988886105ce565b905060006101a88983856106cb565b50905060008184604001516101bd9190610add565b8451602090950151949b949a509850929650505050505050565b6000806101e58585856104fe565b905060006101f386866105ce565b905080610140015161020a57600192505050610225565b6000610216828461072a565b60409092015190911115925050505b9392505050565b6000806000806000806000806102428a8a6105ce565b60808101515161010082015182516020840151604085015160e086015160c090960151929d50909b509950929750909550935091505092959891949750929550565b6000806102928585856104fe565b905060006102a086866105ce565b90508061014001516102b757600092505050610225565b60006102c48783856106cb565b509050600081846040015185602001516102de9190610add565b6102e89190610add565b905060006102f68483610796565b9050600084604001516012600a61030d9190610bd4565b610318906001610be0565b6103229084610be0565b61032c9190610bf7565b865190915061033c908290610c19565b9a9950505050505050505050565b604051635881fc3360e01b81526001600160a01b038381166004830152828116602483015260009190851690635881fc3390604401602060405180830381865afa15801561039c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c09190610c55565b949350505050565b6000806103d68585856104fe565b905060006103e486866105ce565b825190915015806103f85750806101400151155b1561040857600092505050610225565b600061041482846107e3565b905060006104246012600a610bd4565b61042f906001610be0565b604084015161043e9084610be0565b6104489190610bf7565b905060006104578985876106cb565b509050600081866040015187602001516104719190610add565b61047b9190610add565b905060006104898285610c19565b905060008113801561049e5750808660e00151125b1561033c575060e08501519a9950505050505050505050565b6000806104c58585856104fe565b905060006104d386866105ce565b90508061014001516104ea57600092505050610225565b6104f4818361072a565b9695505050505050565b6105296040518060800160405280600081526020016000815260200160008152602001600081525090565b60405163e2c7283f60e01b81526001600160a01b038481166004830152838116602483015260009182918291829189169063e2c7283f90604401608060405180830381865afa158015610580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a49190610c70565b60408051608081018252948552602085019390935291830152606082015298975050505050505050565b6105d66109ad565b60008060008060008060008060008060008d6001600160a01b031663c665471f8e6040518263ffffffff1660e01b815260040161062291906001600160a01b0391909116815260200190565b6101a060405180830381865afa158015610640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106649190610ca6565b60408051610160810182529b8c5260208c019a909a52988a01979097526060890195909552608088019390935260a087019190915260c086015260e085015261010084015261012083015215156101408201529b5050505050505050505050505b92915050565b60008060006106da8686610820565b905060006106ea6012600a610bd4565b6106f5906001610be0565b602086015160608701516107099085610d90565b6107139190610be0565b61071d9190610bf7565b9791965090945050505050565b600080826040015183602001516107419190610add565b9050806000036107555760009150506106c5565b600061076185856107e3565b905061078d6107726012600a610bd4565b61077d906001610be0565b6107879084610be0565b826108a2565b95945050505050565b60008064e8d4a510008460c001516107ae9190610be0565b6107ba6012600a610bd4565b6107c5906001610be0565b6107cf86866108e2565b6107d99190610be0565b6103c09190610bf7565b6000806107f26012600a610bd4565b6107fd906001610be0565b64e8d4a510008560c001516108168787600001516108e2565b6107cf9190610be0565b600080826080015160400151426108379190610d90565b6080840151516108479190610be0565b83608001516020015161085a9190610add565b9050600061086785610900565b9050600081604001514261087b9190610d90565b82516108879190610be0565b82602001516108969190610add565b90506104f48184610add565b6000816000036108b157600080fd5b826000036108c1575060006106c5565b816108cd600185610d90565b6108d79190610bf7565b610225906001610add565b6000826101200151600a6108f69190610bd4565b6102259083610be0565b61092460405180606001604052806000815260200160008152602001600081525090565b6000806000846001600160a01b03166313f60c9a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b9190610da3565b6040805160608101825293845260208401929092529082015295945050505050565b604051806101600160405280600081526020016000815260200160008152602001600081526020016109f960405180606001604052806000815260200160008152602001600081525090565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b6001600160a01b0381168114610a4057600080fd5b50565b600080600060608486031215610a5857600080fd5b8335610a6381610a2b565b92506020840135610a7381610a2b565b91506040840135610a8381610a2b565b809150509250925092565b60008060408385031215610aa157600080fd5b8235610aac81610a2b565b91506020830135610abc81610a2b565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106c5576106c5610ac7565b600181815b80851115610b2b578160001904821115610b1157610b11610ac7565b80851615610b1e57918102915b93841c9390800290610af5565b509250929050565b600082610b42575060016106c5565b81610b4f575060006106c5565b8160018114610b655760028114610b6f57610b8b565b60019150506106c5565b60ff841115610b8057610b80610ac7565b50506001821b6106c5565b5060208310610133831016604e8410600b8410161715610bae575081810a6106c5565b610bb88383610af0565b8060001904821115610bcc57610bcc610ac7565b029392505050565b60006102258383610b33565b80820281158282048414176106c5576106c5610ac7565b600082610c1457634e487b7160e01b600052601260045260246000fd5b500490565b8181036000831280158383131683831282161715610c3957610c39610ac7565b5092915050565b80518015158114610c5057600080fd5b919050565b600060208284031215610c6757600080fd5b61022582610c40565b60008060008060808587031215610c8657600080fd5b505082516020840151604085015160609095015191969095509092509050565b60008060008060008060008060008060008b8d036101a0811215610cc957600080fd5b8c519b5060208d01519a5060408d0151995060608d015198506060607f1982011215610cf457600080fd5b506040516060810181811067ffffffffffffffff82111715610d2657634e487b7160e01b600052604160045260246000fd5b806040525060808d0151815260a08d0151602082015260c08d015160408201528097505060e08c015195506101008c015194506101208c015193506101408c015192506101608c01519150610d7e6101808d01610c40565b90509295989b509295989b9093969950565b818103818111156106c5576106c5610ac7565b600080600060608486031215610db857600080fd5b835192506020840151915060408401519050925092509256fea2646970667358221220ceb6527dd6dc81b0322d0403759bb3a870432a42cb21e5ed3918f779e8db164e64736f6c63430008150033';

type VaultGettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultGettersConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultGetters__factory extends ContractFactory {
  constructor(...args: VaultGettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VaultGetters & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VaultGetters__factory {
    return super.connect(runner) as VaultGetters__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultGettersInterface {
    return new Interface(_abi) as VaultGettersInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VaultGetters {
    return new Contract(address, _abi, runner) as unknown as VaultGetters;
  }
}
